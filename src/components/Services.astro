---
import SectionHeading from './SectionHeading.astro';

interface Props {
  title: string;
  services: string[];
}

const { title, services } = Astro.props;

const basePath = import.meta.env.BASE_URL.replace(/\/$/, '');
const toPublicPath = (path: string) => `${basePath}${path}`;

const groups = {
  vision: [] as string[],
  architecture: [] as string[],
  delivery: [] as string[],
};

for (const service of services) {
  if (service.includes('事業') || service.includes('都市') || service.includes('プロデュース') || service.includes('ロゴマーク')) {
    groups.vision.push(service);
    continue;
  }
  if (service.includes('設計') || service.includes('デザイン') || service.includes('CG') || service.includes('パース')) {
    groups.architecture.push(service);
    continue;
  }
  groups.delivery.push(service);
}

const storyline = [
  {
    step: '01',
    label: 'Vision',
    headline: '事業とブランドの解像度を高める',
    summary: '経営陣とステークホルダーを巻き込み、課題仮説・事業戦略・ブランド体験を一本化。Works の「課題」で共有されるインサイトをここで設計します。',
    services: groups.vision,
    media: toPublicPath('/assets/services-vision.jpg'),
    bridge: 'Hero で掲げたビジョンを現場で言語化するフェーズ',
  },
  {
    step: '02',
    label: 'Architecture',
    headline: 'BIM × AI で解決策を具体化する',
    summary: '空間・プロダクト・ビジュアルを同時設計し、Works の「解決」で紹介するアウトプットをつくり込みます。感性と数値の両方から意思決定を支援。',
    services: groups.architecture,
    media: toPublicPath('/assets/services-architecture.jpg'),
    bridge: 'Challenge に対する Solution をプロトタイプするフェーズ',
  },
  {
    step: '03',
    label: 'Delivery',
    headline: '運用・DXまで価値を定着させる',
    summary: 'ソフトウェア開発と教育、運営支援まで伴走し、Works の「価値」で語る成果指標を実装します。データ連動型の運用で改善を繰り返します。',
    services: groups.delivery,
    media: toPublicPath('/assets/services-delivery.jpg'),
    bridge: 'Solution を Value へ転換するエクスペリエンス設計',
  },
];

const bridgeChips = [
  { label: 'Challenge', description: '課題を共通言語化' },
  { label: 'Solution', description: '体験と仕組みを同期' },
  { label: 'Value', description: '運用で成果を可視化' },
];
---

<section id="services" class="bg-surface-50 py-24 sm:py-32">
  <div class="mx-auto flex max-w-6xl flex-col gap-12 px-6 sm:px-8 lg:px-12">
    <SectionHeading
      kicker="Capability"
      highlight="Vision → Architecture → Delivery"
      title={title}
      summary="ヒーローで掲げるビジョンから Works の成果まで一貫したストーリーラインを設計。課題、解決、価値を 3 ステップで組み立て、必要な瞬間に必要な専門家をアサインします。"
      cta={{ label: 'サービス相談', href: '#contact' }}
    />

    <div class="grid gap-8">
      <article class="interactive-card relative overflow-hidden rounded-[36px] border border-surface-200/70 bg-white shadow-[0_32px_90px_rgba(15,23,42,0.12)]">
        <img src={toPublicPath('/assets/service-matrix.jpg')} alt="サービスストーリーラインのイメージ" loading="lazy" class="h-full w-full object-cover" />
        <div class="absolute inset-0 bg-gradient-to-br from-surface-950/80 via-surface-900/30 to-transparent"></div>
        <div class="absolute inset-0 flex flex-col justify-between gap-6 px-8 py-8 text-surface-50 sm:px-12 sm:py-12">
          <div class="flex flex-col gap-3 text-balance">
            <span class="text-[11px] uppercase tracking-[0.45em] text-primary-200/90">Storyline Design</span>
            <h3 class="text-2xl font-semibold sm:text-3xl">Hero のビジョンと Works の成果を一本の体験でつなぐ</h3>
            <p class="max-w-2xl text-sm text-surface-200 sm:text-base">
              都市・建築・ホスピタリティを横断するプロジェクトでは、構想から運用までのメッセージを一貫させることが成功の鍵です。3 つのステップを通じて、課題設定 → 解決案 → 価値創出を高速に往復しながら伴走します。
            </p>
          </div>
          <div class="flex flex-wrap gap-3 text-[11px] uppercase tracking-[0.35em] text-primary-200/90">
            {bridgeChips.map((chip) => (
              <span class="rounded-full border border-white/20 bg-white/10 px-4 py-2">
                {chip.label}
                <span class="ml-2 text-[10px] tracking-[0.12em] text-surface-200">{chip.description}</span>
              </span>
            ))}
          </div>
        </div>
      </article>

      <ol class="grid gap-6 md:grid-cols-3" data-service-storyline>
        {storyline.map((stage) => (
          <li class="interactive-card group relative flex flex-col overflow-hidden rounded-[32px] border border-surface-200/80 bg-white p-6 shadow-[0_26px_70px_rgba(15,23,42,0.12)]">
            <div class="absolute inset-x-0 top-0 h-32 overflow-hidden rounded-t-[32px]">
              <img src={stage.media} alt="" loading="lazy" class="h-full w-full object-cover opacity-80 transition duration-700 group-hover:scale-105" />
              <div class="absolute inset-0 bg-gradient-to-b from-surface-950/70 via-transparent to-transparent"></div>
            </div>
            <div class="relative mt-28 flex flex-1 flex-col gap-5">
              <div class="flex items-baseline justify-between gap-3">
                <span class="text-xs font-semibold uppercase tracking-[0.35em] text-primary-500/80">{stage.step} {stage.label}</span>
                <span class="text-[11px] font-medium tracking-[0.15em] text-surface-400">{stage.bridge}</span>
              </div>
              <h3 class="text-lg font-semibold text-surface-900 sm:text-xl">{stage.headline}</h3>
              <p class="text-sm text-surface-600">{stage.summary}</p>
              <div class="flex flex-wrap gap-2">
                {stage.services.map((item) => (
                  <span class="inline-flex items-center rounded-full border border-surface-200 bg-surface-50 px-3 py-1 text-[11px] font-medium tracking-[0.1em] text-surface-500">
                    {item}
                  </span>
                ))}
              </div>
            </div>
          </li>
        ))}
      </ol>
    </div>
  </div>
</section>
